<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xinlang.yx.project_record.mapper.RecordMapper">

	<resultMap id="BaseResultMap" type="com.xinlang.yx.project_record.bean.Record">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="projectId" jdbcType="INTEGER" property="project_id" />
		<result column="targetId" jdbcType="INTEGER" property="target_id" />
		<result column="title" jdbcType="VARCHAR" property="title" />
		<result column="content" jdbcType="VARCHAR" property="content" />
		<result column="createTime" jdbcType="TIMESTAMP" property="create_time" />
		<result column="remark" jdbcType="VARCHAR" property="remark" />
		<result column="workingDay" jdbcType="TIMESTAMP" property="working_day" />
		<result column="createUserId" jdbcType="INTEGER" property="create_user_id" />
		<result column="checkUserId" jdbcType="INTEGER" property="check_user_id" />
		<result column="status" jdbcType="INTEGER" property="status" />
	</resultMap>

	<resultMap id="ResultMapTwo" type="com.xinlang.yx.project_record.bean.RecordResult">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="projectId" jdbcType="INTEGER" property="project_id" />
		<result column="targetId" jdbcType="INTEGER" property="target_id" />
		<result column="title" jdbcType="VARCHAR" property="title" />
		<result column="content" jdbcType="VARCHAR" property="content" />
		<result column="createTime" jdbcType="TIMESTAMP" property="create_time" />
		<result column="remark" jdbcType="VARCHAR" property="remark" />
		<result column="createUser" jdbcType="VARCHAR" property="createUser" />
		<result column="checkUser" jdbcType="VARCHAR" property="checkUser" />
		<result column="workingDay" jdbcType="TIMESTAMP" property="working_day" />
		<result column="createUserId" jdbcType="INTEGER" property="create_user_id" />
		<result column="status" jdbcType="INTEGER" property="status" />
	</resultMap>

	<resultMap id="VOResultMap" type="com.xinlang.yx.project_record.VO.RecordVO">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="projectId" jdbcType="INTEGER" property="project_id" />
		<result column="targetId" jdbcType="INTEGER" property="target_id" />
		<result column="title" jdbcType="VARCHAR" property="title" />
		<result column="content" jdbcType="VARCHAR" property="content" />
		<result column="createTime" jdbcType="TIMESTAMP" property="create_time" />
		<result column="remark" jdbcType="VARCHAR" property="remark" />
		<result column="workingDay" jdbcType="TIMESTAMP" property="working_day" />
		<result column="createUserId" jdbcType="INTEGER" property="create_user_id" />
		<result column="status" jdbcType="INTEGER" property="status" />

		<collection property="files" ofType="com.xinlang.zly_xyx.cat_file_server.bean.Album">
			<result column="fid" jdbcType="VARCHAR" property="id"/>
			<result column="name" jdbcType="VARCHAR" property="name" />
			<result column="userId" jdbcType="INTEGER" property="userId" />
			<result column="contentType" jdbcType="VARCHAR" property="contentType" />
			<result column="isWeChat" jdbcType="BOOLEAN" property="isWeChat" />
			<result column="size" jdbcType="INTEGER" property="size" />
			<result column="path" jdbcType="VARCHAR" property="path" />
			<result column="source" jdbcType="VARCHAR" property="source" />
			<result column="createTime" jdbcType="TIMESTAMP" property="createTime" />

		</collection>
	</resultMap>


	<insert id="addFile">
		INSERT INTO jour_relevance_file ( journal_id, journal_file_id)
                       VALUES
                       ( ${id}, ${fileId})
	</insert>

	<delete id="delFile">
		DELETE FROM jour_relevance_file WHERE journal_id =${journalId} AND journal_file_id = ${fileId}

	</delete>


	<select id="findVO" resultMap="VOResultMap">
		select
			j.*,f.id as fid,f.*
		from
			project_journal as j
		left join
			jour_relevance_file as m
		on
			j.id = m.journal_id
		left join
			album as f
		on
			m.journal_file_id = f.id
		and
			j.id=${id}

	</select>

	<select id="findByTarIdAUIDASTUVO" resultMap="VOResultMap">
		select
			j.*,f.id as fid,f.*
		from
			project_journal as j
		left join
			jour_relevance_file as m
		on
			j.id = m.journal_id
		left join
			album as f
		on
			m.journal_file_id = f.id
		and
			j.target_id=${targetId}
		and
			j.status = ${status}
	</select>

	<select id="findByproId" resultMap="BaseResultMap">
		select
			p.*
		from
			project_journal as p
		LEFT JOIN
			item_target
		AS i on
			p.target_id = i.id
		AND
			i.item_id = ${proId};
		<if test="null!=status">
		AND
			p.`status` = ${status}
		</if>
		<if test="null!=userId">
		AND
			p.create_user_id = ${userId}
		</if>





	</select>

	<select id="find" resultMap="ResultMapTwo">
	select
		p.*,a.username
		from
		project_journal as p
		LEFT JOIN
		app_user
		AS a on
		a.id = p.create_user_id
			and
		p.project_id = ${proId};
		<if test="0!=status">
			AND
			p.`status` = ${status}
		</if>
		<if test="null!=userId">
			AND
			p.create_user_id = ${userId}
		</if>





	</select>



</mapper>